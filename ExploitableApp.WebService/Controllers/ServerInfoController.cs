using System;
using System.Collections.Generic;
using System.Linq;
using System.Net;
using System.Net.Sockets;
using System.Threading.Tasks;
using ExploitableApp.Data.Managers;
using Microsoft.AspNetCore.Mvc;
using Newtonsoft.Json;

namespace ExploitableApp.WebService.Controllers
{
    [Route("api/[controller]")]
    public class ServerInfoController : Controller
    {
        private BankingAccountManager _BankingAccountManager;

        public ServerInfoController(BankingAccountManager bankingAccountManager)
        {
            _BankingAccountManager = bankingAccountManager;
        }

        // GET api/values
        [HttpGet]
        public async Task<string> Get()
        {
            Func<IPAddress> ip = () =>{
                if (!System.Net.NetworkInformation.NetworkInterface.GetIsNetworkAvailable())
                {
                    return null;
                }

                IPHostEntry host = Dns.GetHostEntry(Dns.GetHostName());

                return host
                    .AddressList
                    .FirstOrDefault(x => x.AddressFamily == AddressFamily.InterNetwork);
            };

            return JsonConvert.SerializeObject(new
            {
                FriendlyName = "exploitableapp-ws",
                IPAddress = ip().ToString(),
                TotalTransactions = await _BankingAccountManager.CountTransactions(),
                PendingTransactions = await _BankingAccountManager.CountTransactions("Pending"),
                CompletedTransactions = await _BankingAccountManager.CountTransactions("Completed")
            });
        }

        // GET api/ProcessTransaction/xyz
        [HttpGet("{id}")]
        public async Task<string> Get(string id)
        {
            return await Get();
        }

        // POST api/ProcessTransaction
        [HttpPost]
        public void Post([FromBody]string value)
        {
        }

        // PUT api/ProcessTransaction/xyz
        [HttpPut("{id}")]
        public void Put(string id, [FromBody]string value)
        {
        }

        // DELETE api/ProcessTransaction/xyz
        [HttpDelete("{id}")]
        public void Delete(string id)
        {
        }
    }
}
