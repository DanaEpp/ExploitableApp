version: '3.4'

services:
  proxy:
    build:
      context: .
      dockerfile: ./haproxy/Dockerfile
    ports:
      - "80:80"
      - "9000:9000"
    depends_on:
      - app1
      - app2
      - app3
      - exploitableapp-ws
      - netmon
  app1:
    container_name: app1
    image: exploitable/exploitableapp
    depends_on:
      - db
      - exploitableapp-ws
      - redis
      - netmon
    ports:
      - "8080"
    volumes:
      - sharedfiles:/app/sharedfiles/
    environment:
      ASPNETCORE_ENVIRONMENT: "Development"
      ASPNETCORE_URLS: "http://+:8080"
      USEMYSQL: "true"
  app2:
    container_name: app2
    image: exploitable/exploitableapp
    depends_on:
      - db
      - exploitableapp-ws
      - redis
      - netmon
    ports:
      - "8080"
    volumes:
      - sharedfiles:/app/sharedfiles/
    environment:
      ASPNETCORE_ENVIRONMENT: "Development"
      ASPNETCORE_URLS: "http://+:8080"
      USEMYSQL: "true"
  app3:
    container_name: app3
    image: exploitable/exploitableapp
    depends_on:
      - db
      - exploitableapp-ws
      - redis
      - netmon
    ports:
      - "8080"
    volumes:
      - sharedfiles:/app/sharedfiles/
    environment:
      ASPNETCORE_ENVIRONMENT: "Development"
      ASPNETCORE_URLS: "http://+:8080"
      USEMYSQL: "true"
  exploitableapp-ws:
    image: exploitable/exploitableapp.webservice
    depends_on:
      - db
      - netmon
    volumes:
      - sharedfiles:/app/sharedfiles/
    environment:
      ASPNETCORE_ENVIRONMENT: "Development"
      USEMYSQL: "true"
  redis:
    image: "redis:4.0.11"
    command: redis-server --requirepass Password1
    depends_on:
      - netmon
  db:
    image: mysql:5.7
    restart: always
    depends_on:
      - netmon
    environment:
      MYSQL_ROOT_PASSWORD: "Password1"
      MYSQL_DATABASE: "ExploitableDB"
      MYSQL_USER: "sa"
      MYSQL_PASSWORD: "Password1"
  adminer:
    image: adminer
    restart: always
    depends_on:
      - db
    ports:
      - "8080:8080"
  netmon:
    build:
      context: .
      dockerfile: ./ssh/Dockerfile
    ports:
      - "1337:22"

volumes:
  sharedfiles: {}
