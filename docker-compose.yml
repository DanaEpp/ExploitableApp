version: '3.4'



services:
  waf:
    image: "owasp/modsecurity-crs:v3.1"
    environment:
      PROXY: "1"
      UPSTREAM: "proxy:80"
    ports:
      - "80:80"
    depends_on:
      - proxy
  proxy:
    build:
      context: .
      dockerfile: ./Dockerfile
    depends_on:
      - app1
      - app2
      - app3
  app1:
    container_name: app1
    image: ${DOCKER_REGISTRY}exploitableapp
    build:
      context: .
      dockerfile: ./ExploitableApp/Dockerfile 
    depends_on:
      - db
      - exploitableapp-ws
      - redis
    ports:
      - "8080"
    volumes:
      - sharedfiles:/app/sharedfiles/
  app2:
    container_name: app2
    image: ${DOCKER_REGISTRY}exploitableapp
    build:
      context: .
      dockerfile: ./ExploitableApp/Dockerfile 
    depends_on:
      - db
      - exploitableapp-ws
      - redis
    ports:
      - "8080"
    volumes:
      - sharedfiles:/app/sharedfiles/
  app3:
    container_name: app3
    image: ${DOCKER_REGISTRY}exploitableapp
    build:
      context: .
      dockerfile: ./ExploitableApp/Dockerfile 
    depends_on:
      - db
      - exploitableapp-ws
      - redis
    ports:
      - "8080"
    volumes:
      - sharedfiles:/app/sharedfiles/
  exploitableapp-ws:
    image: ${DOCKER_REGISTRY}exploitableappwebservice
    build:
      context: .
      dockerfile: ./ExploitableApp.WebService/Dockerfile
    depends_on:
      - db
    volumes:
      - sharedfiles:/app/sharedfiles/
  redis:
    image: "redis:4.0.11"
    command: redis-server --requirepass Password1
  db:
    image: "microsoft/mssql-server-linux"
    environment:
      SA_PASSWORD: "Password1"
      ACCEPT_EULA: "Y"
