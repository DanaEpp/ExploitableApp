using System;
using System.IO;
using System.Threading.Tasks;
using ExploitableApp.Data.Models;
using Microsoft.AspNetCore.Http;
using Microsoft.AspNetCore.Identity;

namespace ExploitableApp.Extensions
{
    public static class UserManagerExtensions
    {
        public static async Task<IdentityResult> SetProfileImageAsync<T>(this UserManager<T> userManager, T user, IFormFile file, string profileImagePath) where T : ApplicationUser
        {
            var dir = $"/app/sharedfiles/UserUploads/{user.Id}";
            if (!Directory.Exists(dir))
                Directory.CreateDirectory(dir);

            if (file != null)
            {
                var fileData = new byte[file.Length];
                using (var fs = file.OpenReadStream())
                using (var reader = new BinaryReader(fs))
                {
                    reader.Read(fileData, 0, (int)file.Length);
                }

                File.WriteAllBytes($"{dir}/{file.FileName}", fileData);
                user.ProfileImagePath = $"{dir}/{file.FileName}";
            }
            else
            {
                user.ProfileImagePath = profileImagePath;
            }
            return await userManager.UpdateAsync(user);
        }
    }
}
