apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: {{ .Release.Namespace }}
  labels:
    app: {{ printf "%s-%s" .Release.Name  "postgres" }} 
    release: {{ .Release.Name }}
  name: {{ printf "%s-%s" .Release.Name  "postgres" }} 
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: {{ printf "%s-%s" .Release.Name  "postgres" }}
      release: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app: {{ printf "%s-%s" .Release.Name  "postgres" }} 
        release: {{ .Release.Name }}
    spec:
      volumes:
      - name: sharedfiles
        emptyDir: {}
      - name: sharedscripts
        emptyDir: {}
      containers:
      - env:
        - name: "PGDATA"
          value: "/var/lib/postgresql/data/guacamole"
        - name: "POSTGRES_DB"
          value: "{{ .Values.postgresDb }}"
        - name: "POSTGRES_PASSWORD"
          value: "{{ .Values.postgresPwd }}"
        - name: "POSTGRES_USER"
          value: "{{ .Values.postgresUser }}"
        image: "postgres:9.6.14-alpine"
        imagePullPolicy: IfNotPresent
        volumeMounts:
        - name: sharedfiles
          mountPath: /var/lib/postgresql/data
        - name: sharedscripts
          mountPath: /docker-entrypoint-initdb.d/
        name: "{{ printf "%s-%s" .Release.Name  "postgres" }}"
      restartPolicy: Always
status: {}
---
apiVersion: v1
kind: Service
metadata:
  namespace: {{ .Release.Namespace }}
  labels:
    app: {{ printf "%s-%s" .Release.Name  "postgres" }} 
    release: {{ .Release.Name }}
  name: {{ printf "%s-%s" .Release.Name  "postgres" }} 
spec:
  ports:
  - name: "5432"
    port: 5432
    targetPort: 5432
  selector:
    app: {{ printf "%s-%s" .Release.Name  "postgres" }} 
    release: {{ .Release.Name }}
status:
  loadBalancer: {}
